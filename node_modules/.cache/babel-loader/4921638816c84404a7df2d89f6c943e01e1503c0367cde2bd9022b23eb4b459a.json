{"ast":null,"code":"var _jsxFileName = \"/Users/ahmetmenevse/code/ahmetmenevse/tic/tic-tac-toe/tic-tac/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport GameBoard from './Components/GameBoard';\nimport Square from './Components/Square';\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst newBoard = [[null, null, null], [null, null, null], [null, null, null]];\nfunction App() {\n  _s();\n  let [game, setGame] = useState({\n    currentPlayer: 'O',\n    oScore: 0,\n    xScore: 0,\n    board: newBoard,\n    gameover: false\n  });\n  const nextTurn = () => {\n    const nextPlayer = game.currentPlayer === 'O' ? 'X' : 'O';\n    return nextPlayer;\n  };\n  const checkWin = currentBoard => {\n    // Rows\n    for (let row = 0; row < 3; row++) {\n      if (currentBoard[row][0] === currentBoard[row][1] && currentBoard[row][1] === currentBoard[row][2] && currentBoard[row][0] !== null) {\n        return true;\n      }\n    }\n\n    // Columns\n    for (let col = 0; col < 3; col++) {\n      if (currentBoard[0][col] === currentBoard[1][col] && currentBoard[1][col] === currentBoard[2][col] && currentBoard[0][col] !== null) {\n        return true;\n      }\n    }\n\n    //Diagonals\n    if (currentBoard[0][0] === currentBoard[1][1] && currentBoard[1][1] === currentBoard[2][2] && currentBoard[0][0] !== null || currentBoard[0][2] === currentBoard[1][1] && currentBoard[1][1] === currentBoard[2][0] && currentBoard[0][2] !== null) {\n      return true;\n    }\n    return false;\n  };\n  const resetBoard = () => {\n    setGame({\n      ...game,\n      board: newBoard,\n      currentPlayer: 'O',\n      gameover: false\n    });\n  };\n  const takeTurn = (event, i) => {\n    event.preventDefault();\n    // Don't continue if game is already over\n    if (game.gameover) return;\n    let currentBoard = game.board;\n    i === 0 ? currentBoard[0][0] = game.currentPlayer : i === 1 ? currentBoard[0][1] = game.currentPlayer : i === 2 ? currentBoard[0][2] = game.currentPlayer : i === 3 ? currentBoard[1][0] = game.currentPlayer : i === 4 ? currentBoard[1][1] = game.currentPlayer : i === 5 ? currentBoard[1][2] = game.currentPlayer : i === 6 ? currentBoard[2][0] = game.currentPlayer : i === 7 ? currentBoard[2][1] = game.currentPlayer : currentBoard[2][2] = game.currentPlayer;\n    setGame({\n      ...game,\n      board: currentBoard,\n      currentPlayer: nextTurn()\n    });\n    if (checkWin(currentBoard)) {\n      // Playes wins, update game state to top the game\n\n      const currentPlayer = game.currentPlayer;\n      const updateScore = game[currentPlayer.toLowerCase() + 'Score'] + 1;\n      if (updateScore === 5) {\n        // Stop the game and reset scores\n        setGame({\n          ...game,\n          board: currentBoard,\n          gameover: true,\n          xScore: 0,\n          oScore: 0\n        });\n        console.log(`player ${game.currentPlayer} wins!`);\n        return;\n      } else {\n        setGame({\n          ...game,\n          board: currentBoard,\n          currentPlayer: nextTurn(),\n          [currentPlayer.toLocaleLowerCase() + 'Socre']: updateScore\n        });\n        console.log(`Player ${game.currentPlayer} wins this round!`);\n        resetBoard();\n      }\n      return;\n    }\n\n    // Check for a draw\n    const isDraw = currentBoard.flat().every(cell => cell !== null);\n    if (isDraw) {\n      // Draw, update game state to stop the game\n      setGame({\n        ...game,\n        board: currentBoard,\n        currentPlayer: game.currentPlayer,\n        gameOver: true\n      });\n      console.log('It\\'s a draw!');\n      return;\n    }\n\n    // Switch to the next player's turn\n    setGame({\n      ...game,\n      board: currentBoard,\n      currentPlayer: nextTurn()\n    });\n  };\n  useEffect(() => {\n    // Enable the next button when the game is over\n    const nextButton = document.getElementById('next-button');\n    if (nextButton) {\n      nextButton.disabled = !game.gameOver;\n    }\n  }, [game.gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      currentPlayer: game.currentPlayer,\n      onClick: nextTurn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n      children: [game.board.flat().map((square, i) => {\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: square,\n          onClick: event => takeTurn(event, i)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this);\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NOJXG8CEvu+50+iTBOr/bPncT8c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","GameBoard","Square","React","useState","useEffect","newBoard","App","game","setGame","currentPlayer","oScore","xScore","board","gameover","nextTurn","nextPlayer","checkWin","currentBoard","row","col","resetBoard","takeTurn","event","i","preventDefault","updateScore","toLowerCase","console","log","toLocaleLowerCase","isDraw","flat","every","cell","gameOver","nextButton","document","getElementById","disabled","map","square"],"sources":["/Users/ahmetmenevse/code/ahmetmenevse/tic/tic-tac-toe/tic-tac/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './Components/Navbar';\nimport GameBoard from './Components/GameBoard';\nimport Square from './Components/Square';\nimport React, { useState, useEffect } from \"react\";\n\nconst newBoard = [\n  [null, null, null],\n  [null, null, null],\n  [null, null, null],\n]\n\nfunction App() {\n  let [game, setGame] = useState({\n    currentPlayer: 'O',\n    oScore: 0,\n    xScore: 0,\n    board: newBoard,\n    gameover: false\n  });\n\n  const nextTurn = () => {\n    const nextPlayer = game.currentPlayer === 'O' ? 'X' : 'O'\n    return nextPlayer\n  };\n\n  const checkWin = (currentBoard) => {\n    // Rows\n    for (let row = 0; row < 3; row++) {\n      if (\n        currentBoard[row][0] === currentBoard[row][1] &&\n        currentBoard[row][1] === currentBoard[row][2] &&\n        currentBoard[row][0] !== null\n      ) {\n        return true\n      }\n    }\n\n    // Columns\n    for (let col = 0; col < 3; col++) {\n      if (\n        currentBoard[0][col] === currentBoard[1][col] &&\n        currentBoard[1][col] === currentBoard[2][col] &&\n        currentBoard[0][col] !== null\n      ) {\n        return true\n      }\n    }\n\n    //Diagonals\n    if(\n      (currentBoard[0][0] === currentBoard[1][1] &&\n        currentBoard[1][1] === currentBoard[2][2] &&\n        currentBoard[0][0] !==null ) ||\n      (currentBoard[0][2] === currentBoard[1][1] &&\n        currentBoard[1][1] === currentBoard[2][0] &&\n        currentBoard[0][2] !== null)\n    ) {\n      return true\n    }\n    return false\n  }\n\n  const resetBoard = () => {\n    setGame({\n      ...game,\n      board: newBoard,\n      currentPlayer: 'O',\n      gameover: false\n    })\n  }\n\n  const takeTurn = (event, i) => {\n    event.preventDefault();\n      // Don't continue if game is already over\n    if(game.gameover) return;\n    let currentBoard = game.board;\n    i === 0 ? currentBoard[0][0] = game.currentPlayer\n      : i === 1 ? currentBoard[0][1] = game.currentPlayer\n      : i === 2 ? currentBoard[0][2] = game.currentPlayer\n      : i === 3 ? currentBoard[1][0] = game.currentPlayer\n      : i === 4 ? currentBoard[1][1] = game.currentPlayer\n      : i === 5 ? currentBoard[1][2] = game.currentPlayer\n      : i === 6 ? currentBoard[2][0] = game.currentPlayer\n      : i === 7 ? currentBoard[2][1] = game.currentPlayer\n      : currentBoard[2][2] = game.currentPlayer\n\n    setGame ({\n      ...game,\n      board:currentBoard,\n      currentPlayer: nextTurn(),\n    });\n\n    if (checkWin(currentBoard)) {\n      // Playes wins, update game state to top the game\n\n      const currentPlayer = game.currentPlayer;\n      const updateScore = game[currentPlayer.toLowerCase() + 'Score'] + 1;\n\n      if(updateScore === 5) {\n        // Stop the game and reset scores\n        setGame({\n          ...game,\n          board: currentBoard,\n          gameover:true,\n          xScore: 0,\n          oScore: 0\n        })\n        console.log(`player ${game.currentPlayer} wins!`);\n        return;\n      } else {\n        setGame({\n          ...game,\n          board: currentBoard,\n          currentPlayer: nextTurn(),\n          [currentPlayer.toLocaleLowerCase() + 'Socre']: updateScore\n        });\n        console.log(`Player ${game.currentPlayer} wins this round!`);\n        resetBoard();\n    }\n    return;\n  }\n\n  // Check for a draw\n  const isDraw = currentBoard.flat().every((cell) => cell !== null);\n  if (isDraw) {\n    // Draw, update game state to stop the game\n    setGame({\n      ...game,\n      board: currentBoard,\n      currentPlayer: game.currentPlayer,\n      gameOver: true,\n    });\n    console.log('It\\'s a draw!');\n    return;\n  }\n\n  // Switch to the next player's turn\n  setGame({\n    ...game,\n    board: currentBoard,\n    currentPlayer: nextTurn(),\n  });\n};\n\nuseEffect(() => {\n  // Enable the next button when the game is over\n  const nextButton = document.getElementById('next-button');\n  if (nextButton) {\n    nextButton.disabled = !game.gameOver;\n  }\n}, [game.gameOver]);\n\n\n  return (\n    <div className=\"App\">\n      <Navbar currentPlayer = {game.currentPlayer} onClick={nextTurn} />\n      <GameBoard>\n      {\n          game.board.flat().map((square, i) => {\n            return (\n              <Square key={i} value={square} onClick={(event) => takeTurn(event, i)}/>\n            );\n          })\n        };\n      </GameBoard>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}